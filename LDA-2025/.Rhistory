reading
reading %>%
group_by(year) %>%
summarise(average_read = mean(read))
summary(read$read)
summary(reading$read)
ggplot(data = reading %>% group_by(year) %>% summarise(average_read = mean(read)),
aes(x = year, y = average_read)) +
geom_line() + ylim(0,10) +
theme_minimal()
ggplot(data = reading %>% filter(childid %in% c(1:10) %>% mutate(childid = factor(childid))),
aes(x = year, y = read, group = childid, colour = childid)) +
geom_line() + ylim(0,10) +
theme_minimal()
ggplot(data = reading %>% filter(childid %in% c(1:10)) %>% mutate(childid = factor(childid)),
aes(x = year, y = read, group = childid, colour = childid)) +
geom_line() + ylim(0,10) +
theme_minimal()
random_intercepts <- lmer(read ~ t + (1 | childid), data = reading)
summary(random_intercepts)
quadratic_simple <- lmer(read ~ t + t_squared (t | childid), data = reading %>% mutate(t_squared = t^2))
quadratic_simple <- lmer(read ~ t + t_squared + (t | childid), data = reading %>% mutate(t_squared = t^2))
# see results
summary(quadratic_simple)
quadratic_growth <- lmer(read ~ t + t_squared + (t + t_squared | childid), data = reading %>% mutate(t_squared = t^2))
# see results
summary(quadratic_growth)
physfunc <- read_stata("data/physfunc.dta")
names(physfunc)
table(reading$male)
table(physfunc$occ)
str(physfunc)
summary(random_intercepts)
library(texreg)
screenreg(random_intercepts)
m1 <- lmer(phf ~ occ + (1 | id), data = physfunc %>% filter(female == 1))
m1 <- lmer(phf ~ occ + (1 | id), data = physfunc %>% filter(female == 1))
m2 <- lmer(phf ~ occ + (occ | id), data = physfunc %>% filter(female == 1))
m3 <- lmer(phf ~ occ + occ_squared (occ | id), data = physfunc %>% filter(female == 1) %>% mutate(occ_squared = occ^2))
m3 <- lmer(phf ~ occ + occ_squared + (occ | id), data = physfunc %>% filter(female == 1) %>% mutate(occ_squared = occ^2))
list(m1, m2, m3) %>% screenreg
anova(m1, m2)
anova(m2, m3)
list(random_intercepts, random_slope, quadratic_simple, quadratic_growth) %>% screenreg()
names(reading)
quadratic_simple_covs <- lmer(read ~ t + t_squared + male + homecog + (t | childid), data = reading %>% mutate(t_squared = t^2))
# see results
summary(quadratic_simple_covs)
knitr::opts_chunk$set(echo = TRUE)
reading
reading
reading_wide <-
reading %>%
pivot_wider(id_cols = c(childid, male),
names_from = t,
values from = c(homecog, read))
reading_wide <-
reading %>%
pivot_wider(
id_cols = c(childid, male),             # variables that do NOT vary with time
names_from = t,                         # time variable
values_from = c(read, homecog, year),   # time-varying variables
names_sep = "_t"                        # e.g., read_t0, read_t1, etc.
)
View(reading_wide)
lmer(read ~ t + (1 | childid), reading)
lmer(read ~ t + (1 | childid), reading) %>% summary()
View(physfunc)
View(physfunc)
lgcm_ri <- '
# Latent intercept factor
intercept =~ 1*read_t0 + 1*read_t1 + 1*read_t2 + 1*read_t3
'
# estimate the LGCM
fit_lgcm_ri <- sem(lgcm_ri, data = reading_wide, missing = "fiml")
library(lavaan)
lgcm_ri <- '
# Latent intercept factor
intercept =~ 1*read_t0 + 1*read_t1 + 1*read_t2 + 1*read_t3
'
# estimate the LGCM
fit_lgcm_ri <- sem(lgcm_ri, data = reading_wide, missing = "fiml")
summary(fit_lgcm_ri)
# specify the LGCM
lgcm_ri <- '
# Latent intercept factor
intercept =~ 1*read_t0 + 1*read_t1 + 1*read_t2 + 1*read_t3
'
# estimate the LGCM
fit_lgcm_ri <- sem(lgcm_ri, data = reading_wide, missing = "fiml")
# check results
summary(fit_lgcm_ri)
lgcm_slope <- '
# Latent intercept factor
intercept =~ 1*read_t0 + 1*read_t1 + 1*read_t2 + 1*read_t3
# Latent slope factor
slope =~ 0*read_t0 + 1*read_t1 + 2*read_t3 + 3*read_t4
# Latent variables allowed ot covary
intercept ~~ slope
'
# estimate the LGCM
fit_lgcm_slope <- sem(lgcm_slope, data = reading_wide, missing = "fiml")
# specify the LGCM
lgcm_slope <- '
# Latent intercept factor
intercept =~ 1*read_t0 + 1*read_t1 + 1*read_t2 + 1*read_t3
# Latent slope factor
slope =~ 0*read_t0 + 1*read_t1 + 2*read_t3 + 3*read_t3
# Latent variables allowed ot covary
intercept ~~ slope
'
# estimate the LGCM
fit_lgcm_slope <- sem(lgcm_slope, data = reading_wide, missing = "fiml")
# check results
summary(fit_lgcm_slope)
lgcm_slope <- '
# Latent intercept factor
intercept =~ 1*read_t0 + 1*read_t1 + 1*read_t2 + 1*read_t3
# Latent slope factor
slope =~ 0*read_t0 + 1*read_t1 + 2*read_t2 + 3*read_t3
# Latent variables allowed ot covary
intercept ~~ slope
'
# estimate the LGCM
fit_lgcm_slope <- sem(lgcm_slope, data = reading_wide, missing = "fiml")
# check results
summary(fit_lgcm_slope)
# specify the LGCM
lgcm_quadratic <- '
# Latent intercept factor
intercept =~ 1*read_t0 + 1*read_t1 + 1*read_t2 + 1*read_t3
# Latent slope factor
slope =~ 0*read_t0 + 1*read_t1 + 2*read_t2 + 3*read_t3
# Latent quadratic factor
quadratic =~ 0*read_t0 + 1*read_t1 + 4*read_t2 + 9*read_t3
# Fix variance of quad to zero (fixed effect only)
quadratic ~~ 0*quadratic
# Latent variables allowed ot covary
intercept ~~ slope
'
# estimate the LGCM
fit_lgcm_quadratic <- sem(lgcm_quadratic, data = reading_wide, missing = "fiml")
# check results
summary(fit_lgcm_quadratic)
lgcm_quadratic_latent <- '
# Latent intercept factor
intercept =~ 1*read_t0 + 1*read_t1 + 1*read_t2 + 1*read_t3
# Latent slope factor
slope =~ 0*read_t0 + 1*read_t1 + 2*read_t2 + 3*read_t3
# Latent quadratic factor
quadratic =~ 0*read_t0 + 1*read_t1 + 4*read_t2 + 9*read_t3
# Latent variables allowed to covary
intercept ~~ slope
intercept ~~ quadratic
slope ~~ quadratic
'
# estimate the LGCM
fit_lgcm_quadratic_latent <- sem(lgcm_quadratic_latent, data = reading_wide, missing = "fiml")
# check results
summary(fit_lgcm_quadratic_latent)
fitMeasures(fit_lgcm_ri, c("aic", "bic", "rmsea", "cfi", "tli"))
fitMeasures(fit_lgcm_slope, c("aic", "bic", "rmsea", "cfi", "tli"))
fitMeasures(fit_lgcm_quadratic, c("aic", "bic", "rmsea", "cfi", "tli"))
fitMeasures(fit_lgcm_quadratic_latent, c("aic", "bic", "rmsea", "cfi", "tli"))
lgcm_quadratic_covariates <- '
# Latent intercept factor
intercept =~ 1*read_t0 + 1*read_t1 + 1*read_t2 + 1*read_t3
# Latent slope factor
slope =~ 0*read_t0 + 1*read_t1 + 2*read_t2 + 3*read_t3
# Latent quadratic factor
quadratic =~ 0*read_t0 + 1*read_t1 + 4*read_t2 + 9*read_t3
# Fix variance of quad to zero (fixed effect only)
quadratic ~~ 0*quadratic
# Latent variables allowed to covary
intercept ~~ slope
# Regress growth factors on time-invariant covariates
intercept ~ male
slope     ~ male
# Regress observed outcomes on time-varying covariates
read_t0 ~ homecog_t0
read_t1 ~ homecog_t1
read_t2 ~ homecog_t2
read_t3 ~ homecog_t3
'
# estimate the LGCM
fit_lgcm_quadratic_covariates <- sem(lgcm_quadratic_covariates, data = reading_wide, missing = "fiml")
# check results
summary(fit_lgcm_quadratic_covariates, fit.measures = TRUE, standardized = TRUE)
lgcm_quadratic_covariates <- '
# Latent intercept factor
intercept =~ 1*read_t0 + 1*read_t1 + 1*read_t2 + 1*read_t3
# Latent slope factor
slope =~ 0*read_t0 + 1*read_t1 + 2*read_t2 + 3*read_t3
# Latent quadratic factor
quadratic =~ 0*read_t0 + 1*read_t1 + 4*read_t2 + 9*read_t3
# Fix variance of quad to zero (fixed effect only)
quadratic ~~ 0*quadratic
# Latent variables allowed to covary
intercept ~~ slope
# Regress growth factors on time-invariant covariates
intercept ~ male
slope     ~ male
# Regress observed outcomes on time-varying covariates
#read_t0 ~ homecog_t0
#read_t1 ~ homecog_t1
#read_t2 ~ homecog_t2
#read_t3 ~ homecog_t3
'
# estimate the LGCM
fit_lgcm_quadratic_covariates <- sem(lgcm_quadratic_covariates, data = reading_wide, missing = "fiml")
# check results
summary(fit_lgcm_quadratic_covariates, fit.measures = TRUE, standardized = TRUE)
reading_wide <-
reading %>%
pivot_wider(
id_cols = c(childid, male, homecog),             # variables that do NOT vary with time
names_from = t,                         # time variable
values_from = c(read, year),   # time-varying variables
names_sep = "_t"                        # e.g., read_t0, read_t1, etc.
)
# double check it worked
head(reading_wide)
lgcm_quadratic_covariates <- '
# Latent intercept factor
intercept =~ 1*read_t0 + 1*read_t1 + 1*read_t2 + 1*read_t3
# Latent slope factor
slope =~ 0*read_t0 + 1*read_t1 + 2*read_t2 + 3*read_t3
# Latent quadratic factor
quadratic =~ 0*read_t0 + 1*read_t1 + 4*read_t2 + 9*read_t3
# Fix variance of quad to zero (fixed effect only)
quadratic ~~ 0*quadratic
# Latent variables allowed to covary
intercept ~~ slope
# Regress growth factors on time-invariant covariates
intercept ~ male + homecog
slope     ~ male + homecog
# If we had, this is how we would regress observed outcomes on time-varying covariates
# read_t0 ~ x_t0
# read_t1 ~ x_t1
# read_t2 ~ x_t2
# read_t3 ~ x_t3
'
# estimate the LGCM
fit_lgcm_quadratic_covariates <- sem(lgcm_quadratic_covariates, data = reading_wide, missing = "fiml")
# check results
summary(fit_lgcm_quadratic_covariates, fit.measures = TRUE, standardized = TRUE)
summary(fit_lgcm_quadratic_covariates, fit.measures = TRUE, standardized = TRUE)
fit_lgcm_quadratic_covariates <- lavaan(lgcm_quadratic_covariates, data = reading_wide, missing = "fiml")
# check results
summary(fit_lgcm_quadratic_covariates, fit.measures = TRUE, standardized = TRUE)
fit_lgcm_quadratic_covariates <- sem(lgcm_quadratic_covariates, data = reading_wide, missing = "fiml")
# check results
summary(fit_lgcm_quadratic_covariates, fit.measures = TRUE, standardized = TRUE)
fit_lgcm_quadratic_covariates <- sem(lgcm_quadratic_covariates, data = reading_wide, missing = "fiml", meanstructure = TRUE)
# check results
summary(fit_lgcm_quadratic_covariates, fit.measures = TRUE, standardized = TRUE)
load("https://thiagoroliveira.com/LDA-2025/data/chicago.Rdata")
load("https://thiagoroliveira.com/LDA-2025/data/chicago.Rdata")
load("data/chicago.Rdata")
chicago_wide <- chicago %>%
filter(year > 2010 & year < 2015) %>%
pivot_wider(names_from = year,
values_from = -c(NC_NUM, year, FAC_disadv, population_density))
clpm_model <- '
violent_2014 ~ a * violent_2013 + b * complaints_2013
violent_2013 ~ a * violent_2012 + b * complaints_2012
violent_2012 ~ a * violent_2011 + b * complaints_2011
complaints_2014 ~ c * complaints_2013 + d * violent_2013
complaints_2013 ~ c * complaints_2012 + d * violent_2012
complaints_2012 ~ c * complaints_2011 + d * violent_2011
'
# fit the CLPM
clpm_fit <- sem(clpm_model, estimator = "ML", data = chicago_wide)
# summary results
summary(clpm_fit)
clpm_model <- '
violent_2014 ~ a * violent_2013 + b * complaints_2013
violent_2013 ~ a * violent_2012 + b * complaints_2012
violent_2012 ~ a * violent_2011 + b * complaints_2011
complaints_2014 ~ c * complaints_2013 + d * violent_2013
complaints_2013 ~ c * complaints_2012 + d * violent_2012
complaints_2012 ~ c * complaints_2011 + d * violent_2011
'
# fit the CLPM
clpm_fit <- sem(clpm_model, estimator = "ML", data = chicago_wide)
# summary results
summary(clpm_fit, fit.measures = TRUE, standardized = TRUE)
clpm_model_unconstrained <- '
violent_2014 ~ violent_2013 + complaints_2013
violent_2013 ~ violent_2012 + complaints_2012
violent_2012 ~ violent_2011 + complaints_2011
complaints_2014 ~ complaints_2013 + violent_2013
complaints_2013 ~ complaints_2012 + violent_2012
complaints_2012 ~ complaints_2011 + violent_2011
'
# fit the CLPM
clpm_unconstrained.fit <- sem(clpm_model_unconstrained, estimator = "ML", data = chicago_wide)
# summary results
summary(clpm_fit)
summary(clpm_unconstrained.fit, fit.measures = TRUE, standardized = TRUE)
clpm_model_unconstrained <- '
violent_2014 ~ violent_2013 + complaints_2013
violent_2013 ~ violent_2012 + complaints_2012
violent_2012 ~ violent_2011 + complaints_2011
complaints_2014 ~ complaints_2013 + violent_2013
complaints_2013 ~ complaints_2012 + violent_2012
complaints_2012 ~ complaints_2011 + violent_2011
violent_2011 ~~ complaints_2011
violent_2012 ~~ complaints_2012
violent_2013 ~~ complaints_2013
violent_2014 ~~ complaints_2014
'
# fit the CLPM
clpm_unconstrained.fit <- sem(clpm_model_unconstrained, estimator = "ML", data = chicago_wide)
# summary results
summary(clpm_unconstrained.fit, fit.measures = TRUE, standardized = TRUE)
clpm_model_covariates <- '
violent_2014 ~ a * violent_2013 + b * complaints_2013
violent_2013 ~ a * violent_2012 + b * complaints_2012
violent_2012 ~ a * violent_2011 + b * complaints_2011
complaints_2014 ~ c * complaints_2013 + d * violent_2013
complaints_2013 ~ c * complaints_2012 + d * violent_2012
complaints_2012 ~ c * complaints_2011 + d * violent_2011
violent_2011 ~~ complaints_2011
violent_2012 ~~ complaints_2012
violent_2013 ~~ complaints_2013
violent_2014 ~~ complaints_2014
complaints_2011 ~ population_density + FAC_disadv
violent_2011 ~ population_density + FAC_disadv
'
# fit the CLPM
clpm_fit_cov <- sem(clpm_model_covariates, estimator = "ML", data = chicago_wide)
# summary results
summary(clpm_fit_cov, fit.measures = TRUE, standardized = TRUE)
clpm_model_covariates_contemporaneous <- '
violent_2014 ~ a * violent_2013 + b * complaints_2013 + e*complaints_2014
violent_2013 ~ a * violent_2012 + b * complaints_2012 + e*complaints_2013
violent_2012 ~ a * violent_2011 + b * complaints_2011 + e*complaints_2012
complaints_2014 ~ c * complaints_2013 + d * violent_2013 + f*violent_2014
complaints_2013 ~ c * complaints_2012 + d * violent_2012 + f*violent_2013
complaints_2012 ~ c * complaints_2011 + d * violent_2011 + f*violent_2012
violent_2011 ~~ complaints_2011
violent_2012 ~~ complaints_2012
violent_2013 ~~ complaints_2013
violent_2014 ~~ complaints_2014
complaints_2011 ~ population_density + FAC_disadv
violent_2011 ~ population_density + FAC_disadv
'
# fit the CLPM
clpm_fit_cov_cont <- sem(clpm_model_covariates_contemporaneous, estimator = "ML", data = chicago_wide)
# summary results
summary(clpm_fit_cov_cont, fit.measures = TRUE, standardized = TRUE)
load("https://thiagoroliveira.com/LDA-2025/data/chicago.Rdata")
load("https://thiagoroliveira.com/LDA-2025/data/chicago.RData")
load("https://thiagoroliveira.com/LDA-2025/data/chicago.RData")
getwd()
load("data/chicago.RData")
library(dpm)
install.packages("riclpm")
chicago.panel <- chicago %>%
mutate(wave = year - 1990) %>%
panel_data(id = NC_NUM,
wave = wave)
names(chicago.panel)
library(riclpm)
install.packages("remotes")
remotes::install_github("kameronkay/riclpm")
library(riclpm)
??riclpm
names(chicago_wide)
RICLPM <- '
# Create between components (random intercepts)
RI_complaints =~ 1*complaints_2011 + 1*complaints_2012 + 1*complaints_2013 + 1*complaints_2014
RI_violent =~ 1*violent_2011 + 1*violent_2012 + 1*violent_2013 + 1*violent_2014
# Create within-person centered variables
wcomplaints_2011 =~ 1*complaints_2011
wcomplaints_2012 =~ 1*complaints_2012
wcomplaints_2013 =~ 1*complaints_2013
wcomplaints_2014 =~ 1*complaints_2014
wviolent_2011 =~ 1*violent_2011
wviolent_2012 =~ 1*violent_2
wviolent_2013 =~ 1*violent_2013
wviolent_2014 =~ 1*violent_2014
# Estimate lagged effects between within-person centered variables
wcomplaints_2012 ~ wcomplaints_2011 + wviolent_2011
wviolent_2012 ~ wcomplaints_2011 + wviolent_2011
wcomplaints_2013 ~ wcomplaints_2012 + wviolent_2
wviolent_2013 ~ wcomplaints_2012 + wviolent_2
wcomplaints_2014 ~ wcomplaints_2013 + wviolent_2013
wviolent_2014 ~ wcomplaints_2013 + wviolent_2013
# Estimate covariance between within-person centered variables at first wave
wcomplaints_2011 ~~ wviolent_2011 # Covariance
# Estimate covariances between residuals of within-person centered variables
wcomplaints_2012 ~~ wviolent_2012
wcomplaints_2013 ~~ wviolent_2013
wcomplaints_2014 ~~ wviolent_2014
# Estimate variance and covariance of random intercepts
RIcomplaints_ ~~ RIcomplaints
RIviolent_ ~~ RIviolent
RIcomplaints_ ~~ RIviolent
# Estimate (residual) variance of within-person centered variables
wcomplaints_2011 ~~ wcomplaints_2011 # Variances
wviolent_2011 ~~ wviolent_2011
wcomplaints_2012 ~~ wcomplaints_2012 # Residual variances
wviolent_2012 ~~ wviolent_2012
wcomplaints_2013 ~~ wcomplaints_2013
wviolent_2013 ~~ wviolent_2013
wcomplaints_2014 ~~ wcomplaints_2014
wviolent_2014 ~~ wviolent_2014
'
RICLPM_nocovs <- lavaan(RICLPM,
data = datZ,
missing = 'ML',
meanstructure = T,
int.ov.free = T
)
RICLPM_nocovs <- lavaan(RICLPM,
data = chicago_wide,
missing = 'ML',
meanstructure = T,
int.ov.free = T)
RICLPM <- '
# Create between components (random intercepts)
RI_complaints =~ 1*complaints_2011 + 1*complaints_2012 + 1*complaints_2013 + 1*complaints_2014
RI_violent =~ 1*violent_2011 + 1*violent_2012 + 1*violent_2013 + 1*violent_2014
# Create within-person centered variables
wcomplaints_2011 =~ 1*complaints_2011
wcomplaints_2012 =~ 1*complaints_2012
wcomplaints_2013 =~ 1*complaints_2013
wcomplaints_2014 =~ 1*complaints_2014
wviolent_2011 =~ 1*violent_2011
wviolent_2012 =~ 1*violent_2
wviolent_2013 =~ 1*violent_2013
wviolent_2014 =~ 1*violent_2014
# Estimate lagged effects between within-person centered variables
wcomplaints_2012 ~ wcomplaints_2011 + wviolent_2011
wviolent_2012 ~ wcomplaints_2011 + wviolent_2011
wcomplaints_2013 ~ wcomplaints_2012 + wviolent_2012
wviolent_2013 ~ wcomplaints_2012 + wviolent_2
wcomplaints_2014 ~ wcomplaints_2013 + wviolent_2013
wviolent_2014 ~ wcomplaints_2013 + wviolent_2013
# Estimate covariance between within-person centered variables at first wave
wcomplaints_2011 ~~ wviolent_2011 # Covariance
# Estimate covariances between residuals of within-person centered variables
wcomplaints_2012 ~~ wviolent_2012
wcomplaints_2013 ~~ wviolent_2013
wcomplaints_2014 ~~ wviolent_2014
# Estimate variance and covariance of random intercepts
RIcomplaints ~~ RIcomplaints
RIviolent ~~ RIviolent
RIcomplaints ~~ RIviolent
# Estimate (residual) variance of within-person centered variables
wcomplaints_2011 ~~ wcomplaints_2011 # Variances
wviolent_2011 ~~ wviolent_2011
wcomplaints_2012 ~~ wcomplaints_2012 # Residual variances
wviolent_2012 ~~ wviolent_2012
wcomplaints_2013 ~~ wcomplaints_2013
wviolent_2013 ~~ wviolent_2013
wcomplaints_2014 ~~ wcomplaints_2014
wviolent_2014 ~~ wviolent_2014
'
RICLPM_nocovs <- lavaan(RICLPM,
data = chicago_wide,
missing = 'ML',
meanstructure = T,
int.ov.free = T)
RICLPM <- '
# Create between components (random intercepts)
RI_complaints =~ 1*complaints_2011 + 1*complaints_2012 + 1*complaints_2013 + 1*complaints_2014
RI_violent =~ 1*violent_2011 + 1*violent_2012 + 1*violent_2013 + 1*violent_2014
# Create within-person centered variables
wcomplaints_2011 =~ 1*complaints_2011
wcomplaints_2012 =~ 1*complaints_2012
wcomplaints_2013 =~ 1*complaints_2013
wcomplaints_2014 =~ 1*complaints_2014
wviolent_2011 =~ 1*violent_2011
wviolent_2012 =~ 1*violent_2012
wviolent_2013 =~ 1*violent_2013
wviolent_2014 =~ 1*violent_2014
# Estimate lagged effects between within-person centered variables
wcomplaints_2012 ~ wcomplaints_2011 + wviolent_2011
wviolent_2012 ~ wcomplaints_2011 + wviolent_2011
wcomplaints_2013 ~ wcomplaints_2012 + wviolent_2012
wviolent_2013 ~ wcomplaints_2012 + wviolent_2012
wcomplaints_2014 ~ wcomplaints_2013 + wviolent_2013
wviolent_2014 ~ wcomplaints_2013 + wviolent_2013
# Estimate covariance between within-person centered variables at first wave
wcomplaints_2011 ~~ wviolent_2011 # Covariance
# Estimate covariances between residuals of within-person centered variables
wcomplaints_2012 ~~ wviolent_2012
wcomplaints_2013 ~~ wviolent_2013
wcomplaints_2014 ~~ wviolent_2014
# Estimate variance and covariance of random intercepts
RI_complaints ~~ RI_complaints
RI_violent ~~ RI_violent
RI_complaints ~~ RI_violent
# Estimate (residual) variance of within-person centered variables
wcomplaints_2011 ~~ wcomplaints_2011 # Variances
wviolent_2011 ~~ wviolent_2011
wcomplaints_2012 ~~ wcomplaints_2012 # Residual variances
wviolent_2012 ~~ wviolent_2012
wcomplaints_2013 ~~ wcomplaints_2013
wviolent_2013 ~~ wviolent_2013
wcomplaints_2014 ~~ wcomplaints_2014
wviolent_2014 ~~ wviolent_2014
'
RICLPM_nocovs <- lavaan(RICLPM,
data = chicago_wide,
missing = 'ML',
meanstructure = T,
int.ov.free = T)
summary(RICLPM_nocovs, standardized = T)
